package com.Activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.json.JSONObject;

import com.Adapter.ActivityMyShoppingadapter;
import com.Bll.CBLL;
import com.Entity.Merchant;
import com.Entity.MerchantSet;
import com.Http.HttpCallback;
import com.Http.HttpTask;
import com.tool.JSONEntity;
import com.tool.MyURL;
import com.tool.SPUtils;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.TextView;

public class ShoppingGoItem extends Activity{
    
	    private ListView lis_shopgo;
		private ActivityMyShoppingadapter adapter;	
		private MerchantSet list;
		private RelativeLayout rel_distant,rel_price;
		private TextView   tv_distents,tv_price;
		private PopupWindow popupview,popupview2; 
		private ImageView img_shangcheng_back;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_shoppinggoitem);
		
		RequestMainData();
        initView();
        setListen();
        
	}
	
	
	private void RequestMainData() {
		// TODO Auto-generated method stub
		 HashMap<String, String> allmerchant=new Merchant().getmerchant(SPUtils.get(ShoppingGoItem.this, "userId", -1).toString(),SPUtils.get(ShoppingGoItem.this, "userTokens", "").toString(),1,10);	 
	     //获得商家有关数据
	     new HttpTask(allmerchantCallback, MyURL.MERCHANT).execute(allmerchant);
	}
	
	private HttpCallback allmerchantCallback =new HttpCallback() {
		@Override
		public void getResult(JSONObject json) {
			// TODO Auto-generated method stub
			CBLL cBllmerchant = CBLL.getInstance();
			JSONEntity entity = cBllmerchant.json2merchant(json);
		if(entity.isFlag()){	
		MerchantSet merchantlist = (MerchantSet) entity.getData();//将数据都放进set方法中
	    List<Merchant>l=new ArrayList<Merchant>();	//一个实体类的list
		  for(int i=0; i<merchantlist.getSize(); i++){	 //循环set方法
			Merchant merchantentity = merchantlist.getItem(i);//获取每一项实体类中全部的值
					
				l.add(merchantentity);
				list=new MerchantSet(l);
				adapter = new ActivityMyShoppingadapter(ShoppingGoItem.this, list);
				lis_shopgo.setAdapter(adapter);	
				SPUtils.put(ShoppingGoItem.this, "merchantid", merchantlist.getItem(i).getMerchant_id());	
				
			}
		
		}
	}
	};
	private void initView() {
		// TODO Auto-generated method stub
		img_shangcheng_back=(ImageView)findViewById(R.id.img_shangcheng_back);
		lis_shopgo=(ListView)findViewById(R.id.lis_shopgo);
		rel_distant=(RelativeLayout)findViewById(R.id.rel_distant);
		rel_price=(RelativeLayout)findViewById(R.id.rel_price);
		tv_distents=(TextView)findViewById(R.id.tv_distents);
		tv_price=(TextView)findViewById(R.id.tv_price);
	}
	private void setListen() {
		// TODO Auto-generated method stub
		lis_shopgo.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(ShoppingGoItem.this,Shangjia_Detail.class);
				startActivity(intent);
			}
		});
		img_shangcheng_back.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
			finish();	
			}
		});
  rel_distant.setOnClickListener(new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
		
			getPopupWindow();
			   // 这里是位置显示方式,
			 popupview2.showAsDropDown(rel_distant);
		}
	});
		
	rel_price.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				  getPopupWindow2();
				   // 这里是位置显示方式,
		         popupview.showAsDropDown(rel_price);
			}
        
		
		});
	}
	
	private void getPopupWindow()  {  
        if (null != popupview2) { 
        	
        	popupview2.dismiss();  
        	popupview2 = null; 
            return;  
        } else {  
        	
            initPopuptWindow();  
            
        }  
    } 
	
	private void getPopupWindow2()  {  
        if (null != popupview) { 
        	
        	popupview.dismiss();  
        	popupview = null; 
            return;  
        } else {  
        	initPopuptWindow_price();
            
        }  
    } 

	//初始化popupwindow
	protected void initPopuptWindow(){
	
		View view = getLayoutInflater().inflate(R.layout.popupview_shop, null,  
                false);  
		ListView listview=(ListView) view.findViewById(R.id.listview);
		final String[] mStrings = {
	            "<500M", "<1000M", "<2000M", "<3000M", "<5000M"
	            };
		listview.setAdapter(new ArrayAdapter<String>(this,
                R.layout.listview_shopitem, mStrings));
		listview.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				tv_distents.setText(mStrings[position]);
				//用于消失弹窗
				getPopupWindow();
			}
		});
		
		
		popupview2=new PopupWindow(view,ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
		//popupview.setBackgroundDrawable(getResources().getDrawable(R.drawable.popupgray));
		popupview2.setAnimationStyle(android.R.style.Animation_InputMethod);
		//点击外面，窗口消失
		popupview2.setOutsideTouchable(true);
		popupview2.setFocusable(true);
		popupview2.setTouchable(true);
		//防止软键盘被弹出菜单遮住
		popupview2.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
		view.setOnTouchListener(new OnTouchListener() {  
            @Override  
            public boolean onTouch(View v, MotionEvent event) {  
                // TODO Auto-generated method stub  
                if (popupview2 != null && popupview2.isShowing()) {  
                	//tv_changecar.setVisibility(View.VISIBLE);
                	popupview2.dismiss();  
                	popupview2 = null;  
                	
                }  
                return false;  
            }  
        }); 
		
	}
	
	protected void initPopuptWindow_price(){
		View view = getLayoutInflater().inflate(R.layout.popupview_shop, null,  
                false);  
		ListView listview=(ListView) view.findViewById(R.id.listview);
		final String[] mStringprice = {
	            "<100元", "<200元", "<500元", "<1000元", "<3000元"
	            };
		listview.setAdapter(new ArrayAdapter<String>(this,
                R.layout.listview_shopitem, mStringprice));
		
		listview.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				tv_price.setText(mStringprice[position]);
				//用于消失弹窗
				getPopupWindow2();
			}
		});
		
		
		popupview=new PopupWindow(view,ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
		//popupview.setBackgroundDrawable(getResources().getDrawable(R.drawable.popupgray));
		popupview.setAnimationStyle(android.R.style.Animation_InputMethod);
		//点击外面，窗口消失
		popupview.setOutsideTouchable(true);
		popupview.setFocusable(true);
		popupview.setTouchable(true);
		//防止软键盘被弹出菜单遮住
		popupview.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
		view.setOnTouchListener(new OnTouchListener() {  
            @Override  
            public boolean onTouch(View v, MotionEvent event) {  
                // TODO Auto-generated method stub  
                if (popupview != null && popupview.isShowing()) {  
                	//tv_changecar.setVisibility(View.VISIBLE);
                	popupview.dismiss();  
                	popupview = null;  
                	
                }  
                return false;  
            }  
        }); 
		
	}
}
