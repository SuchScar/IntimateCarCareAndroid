package com.Activity;

import java.util.HashMap;

import org.json.JSONObject;

import com.Bll.CBLL;
import com.Entity.Fault;
import com.Entity.UserEntity;
import com.Http.HttpCallback;
import com.Http.HttpTask;
import com.tool.JSONEntity;
import com.tool.MyURL;
import com.tool.ToastUtil;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.LinearLayout;
import android.widget.TextView;

public class FaultDetail extends Activity {

	private LinearLayout lin_back;
	private TextView tv_code, tv_name, tv_faultexplain, tv_repairsug;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_faultdetail);

		initView();
		RequestData();
		setListen();

	}

	private void initView() {
		// TODO Auto-generated method stub
		lin_back = (LinearLayout) findViewById(R.id.lin_back);
		tv_code = (TextView) findViewById(R.id.tv_code);
		tv_name = (TextView) findViewById(R.id.tv_name);
		tv_faultexplain = (TextView) findViewById(R.id.tv_faultexplain);
		tv_repairsug = (TextView) findViewById(R.id.tv_repairsug);

	}

	@SuppressWarnings("unchecked")
	private void RequestData() {
		// TODO Auto-generated method stub
		Intent intent = getIntent();
		int fault_id = intent.getIntExtra("faultid", -1);
		HashMap<String, String> idtakjson = new UserEntity()
				.getIdTaken(FaultDetail.this);
		idtakjson.put("fault_id", fault_id + "");
		new HttpTask(faultdetailCallback, MyURL.FAULTDETAIL).execute(idtakjson);
	}

	private HttpCallback faultdetailCallback = new HttpCallback() {

		@Override
		public void getResult(JSONObject json) {
			// TODO Auto-generated method stub
			CBLL cbll = CBLL.getInstance();
			JSONEntity entity = cbll.json2faultdetail(json);
			if (entity.isFlag()) {
				Fault fault = (Fault) entity.getData();
				tv_code.setText(fault.getCode());
				tv_name.setText(fault.getName());
				tv_faultexplain.setText(fault.getDesc());
				tv_repairsug.setText(fault.getRepair_sug());

			} else {
				if (entity.getMessage() == MyURL.MSG_OTHERS_ERROR) {
					ToastUtil.show(FaultDetail.this, "获取失败");
				} else if (entity.getMessage() == MyURL.MSG_TOKENS_ERROR) {
					// 重启app
					MainActivity.restartApplication(FaultDetail.this);
				}
			}
		}

	};

	private void setListen() {
		// TODO Auto-generated method stub
		lin_back.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				finish();
			}
		});

	}

}
